{"version":3,"sources":["athens/views.cljs"],"mappings":";;;;;;;;;;;;;;;;AAqBA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AAUL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC;AAYL;;;AAAA,AAAMC;AAAN,AAGE,AAAMC,AAAO,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACC,AAAAA,AAAAA;;AAAd,AACE,AAAM,AAAA,AAAAC,AAACC,AAAKJ;AAAZ,AACE,AAACK,AAAS,AAAA,AAAAF,AAAMH;;AAChB,AAAAM,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACC,AAAAA,AAAAA;;AAFH;;;AAKJ,AAAA,AAAMC,AACHC;AADH,AAEE,AAAMC,AAAG,AAAAC;AACHC,AAAK,AAAA,AAAA,AAAA,AAAIH;AADf,AAEE,AAAA,AAAAI,AAAM,AAAUH;AAAhB,AAAqB,AAAAI,AAAA,AAAA,AAAyB,AAAA,AAAAD;AAAzB,AAAA,AAAAC,AAAAA,AAACP,AAAAA,AAAAA;;;AACtB,AAAaG,AAAGE;;AAMpB,AAAA,AAAMG;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA;;AAMA,AAAA,AAAMC;AAAN,AAEE;AAAA,AAAA,AAKGC,AAAMC;;;AAGX,AAAA,AAAMC;AAAN,AAEE,AAAMC,AAAc,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACnB,AAAAA,AAAAA;;AACfoB,AAAc,AAAA,AAAA,AAAA,AAAA,AAAAnB,AAAKiB;AADzB,AAAAjB,AAEMoB,AAAe,AAAAC,AAAMN;AAANO,AAAA,AAAA;AAAAC,AAAA,AAAA,AAA+BJ;AAA/B,AAAA,AAAAE,AAAAC,AAAAC,AAAAF,AAAAC,AAAAC,AAACC,AAAAA,AAAAA;;AAFtB,AAGE,AAAI,AAAA,AAAaJ;AAAjB,AACGK,AAAoB,AAAA,AAAQL;;AAD/B,AAEGM,AAAqB,AAAA,AAAQN;;;AAGpC,AAAA,AAAMO,AACHC;AADH,AAAA,AAEG,AAAAC,AAAMD;AAANC,AAAA,AAAA,AAAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAAA;AAAA;AACSjB;;;AADT;AAEQmB;;;AAFR;AAGSlB;;;AAHT;AAIQG;;;;AACNe;;;;;AAGL,AAAA,AAAMC;AAAN,AAEE,AAAMf,AAAc,AAAAgB,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAAClC,AAAAA,AAAAA;;AACfmC,AAAQ,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACpC,AAAAA,AAAAA;;AADf,AAEE;AAAA,AACE,AAAM6B,AAAW,AAAA,AAAA,AAAA,AAAA,AAAA5B,AAAKiB;AAAtB,AAAA,AAAA,AAAA,AAAA,AAEIrB,AACAwC,AACD,AAAA,AAAApC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKkC,AACFG,AACK,AAACC,AAAU5C,AACf6C,AACK,AAAA,AAAA,AAACC,AAAU7C,AACY,AAAA,AAAA,AAAM,AAAA,AAAC8C,AAAEb,AACPc,AAC7Bf,AAAYC,AACbe,AACAC","names":["athens.views/app-wrapper-style","athens.views/main-content-style","athens.views/alert","errors","G__61515","re-frame.core/subscribe","cljs.core/deref","cljs.core/seq","js/alert","G__61516","re-frame.core/dispatch","athens.views/file-cb","e","fr","js/FileReader","file","p1__61517#","G__61518","athens.views/about-panel","athens.views/pages-panel","athens.devcards.all-pages/table","athens.db/dsdb","athens.views/page-panel","current-route","G__61519","uid","node-or-block","G__61520","G__61521","G__61522","posh.reagent/pull","athens.devcards.node-page/node-page-component","athens.devcards.block-page/block-page-component","athens.views/match-panel","route-name","G__61523","cljs.core/Keyword","athens.devcards.daily-notes/daily-notes-panel","athens.views/main-panel","G__61524","loading","G__61525","athens.devcards.athena/athena-component","athens.devcards.spinner/initial-spinner-component","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$1","athens.devcards.left-sidebar/left-sidebar","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$2","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","athens.devcards.daily-notes/db-scroll-daily-notes","athens.devcards.right-sidebar/right-sidebar-component","athens.devcards.devtool/devtool-component"],"sourcesContent":["(ns athens.views\n  (:require\n    [athens.db :as db]\n    [athens.devcards.all-pages :refer [table]]\n    [athens.devcards.athena :refer [athena-component]]\n    [athens.devcards.block-page :refer [block-page-component]]\n    [athens.devcards.daily-notes :refer [daily-notes-panel db-scroll-daily-notes]]\n    [athens.devcards.devtool :refer [devtool-component]]\n    [athens.devcards.left-sidebar :refer [left-sidebar]]\n    [athens.devcards.node-page :refer [node-page-component]]\n    [athens.devcards.right-sidebar :refer [right-sidebar-component]]\n    [athens.devcards.spinner :refer [initial-spinner-component]]\n    [athens.subs]\n    [posh.reagent :refer [pull]]\n    [re-frame.core :refer [subscribe dispatch]]\n    [stylefy.core :refer [use-style]]))\n\n\n;;; Styles\n\n\n(def app-wrapper-style\n  {:display \"grid\"\n   :grid-template-areas\n   \"'left-sidebar main-content secondary-content'\n   'devtool devtool devtool'\"\n   :grid-template-columns \"auto 1fr auto\"\n   :grid-template-rows \"1fr auto\"\n   :height \"100vh\"})\n\n\n(def main-content-style\n  {:flex \"1 1 100%\"\n   :grid-area \"main-content\"\n   :align-items \"stretch\"\n   :justify-content \"stretch\"\n   :display \"flex\"\n   :overflow-y \"auto\"})\n\n\n;;; Components\n\n\n(defn alert\n  \"When `:errors` subscription is updated, global alert will be called with its contents and then cleared.\"\n  []\n  (let [errors (subscribe [:errors])]\n    (when (seq @errors)\n      (js/alert (str @errors))\n      (dispatch [:clear-errors]))))\n\n\n(defn file-cb\n  [e]\n  (let [fr (js/FileReader.)\n        file (.. e -target -files (item 0))]\n    (set! (.-onload fr) #(dispatch [:parse-datoms (.. % -target -result)]))\n    (.readAsText fr file)))\n\n\n;; Panels\n\n\n(defn about-panel\n  []\n  [:div\n   [:h1 \"About Panel\"]])\n\n\n(defn pages-panel\n  []\n  (fn []\n    ;;[:div\n    ;; [:input.input-file {:type      \"file\"\n    ;;                     :name      \"file-input\"\n    ;;                     :on-change (fn [e] (file-cb e))}]]\n    [table db/dsdb]))\n\n\n(defn page-panel\n  []\n  (let [current-route (subscribe [:current-route])\n        uid           (-> @current-route :path-params :id)\n        node-or-block @(pull db/dsdb '[*] [:block/uid uid])]\n    (if (:node/title node-or-block)\n      [node-page-component (:db/id node-or-block)]\n      [block-page-component (:db/id node-or-block)])))\n\n\n(defn match-panel\n  [route-name]\n  [(case route-name\n     :about about-panel\n     :home daily-notes-panel\n     :pages pages-panel\n     :page page-panel\n     daily-notes-panel)])\n\n\n(defn main-panel\n  []\n  (let [current-route (subscribe [:current-route])\n        loading (subscribe [:loading])]\n    (fn []\n      (let [route-name (-> @current-route :data :name)]\n        [:<>\n         [alert]\n         [athena-component]\n         (if @loading\n           [initial-spinner-component]\n           [:div (use-style app-wrapper-style)\n            [left-sidebar]\n            [:div (use-style main-content-style\n                             {:on-scroll (when (= route-name :home)\n                                           db-scroll-daily-notes)})\n             [match-panel route-name]]\n            [right-sidebar-component]\n            [devtool-component]])]))))\n"]}